name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  STACK_NAME: dev
  AWS_DEFAULT_REGION: us-east-1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install dependencies
      run: |
        uv sync
    - name: Lint with ruff
      run: |
        uv run ruff check .
        uv run ruff format --check .
        uv run isort --check-only --profile black .

  test-api:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC auth with AWS
      contents: read   # Required to checkout code
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install dependencies
      run: |
        cd api
        uv sync
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
    - name: Run API tests
      run: |
        cd api
        uv run pytest --cov=gen_ai_on_aws
      env:
        STACK_NAME: ${{ env.STACK_NAME }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./api
        flags: api
        fail_ci_if_error: false

  test-worker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC auth with AWS
      contents: read   # Required to checkout code
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install dependencies
      run: |
        cd worker
        uv sync
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
    - name: Run worker tests
      run: |
        cd worker
        uv run pytest --cov=worker
      env:
        STACK_NAME: ${{ env.STACK_NAME }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./worker
        flags: worker
        fail_ci_if_error: false

  test-api-start:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC auth with AWS
      contents: read   # Required to checkout code
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install dependencies
      run: |
        cd api
        uv sync
        uv pip install fastapi uvicorn
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
    - name: Test API startup
      run: |
        cd api
        # Start uvicorn in the background
        STACK_NAME=${{ env.STACK_NAME }} uv run uvicorn gen_ai_on_aws.main:app --port 8000 &
        # Wait for the server to start
        sleep 5
        # Try to access the server
        curl -f http://localhost:8000/docs || exit 1
        # Kill the server
        pkill -f uvicorn

  test-pulumi:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC auth with AWS
      contents: read   # Required to checkout code
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"  # Pulumi uses Python 3.12
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install dependencies
      run: |
        cd provisioning
        uv sync
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
    - name: Install Pulumi
      uses: pulumi/actions@v5
    - name: Test Pulumi configuration
      run: |
        cd provisioning
        pulumi login --local
        export PULUMI_CONFIG_PASSPHRASE="ci-test-passphrase"
        pulumi stack init ci-test
        pulumi preview
      env:
        PULUMI_CONFIG_PASSPHRASE: "ci-test-passphrase"
        AWS_REGION: ${{ env.AWS_DEFAULT_REGION }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test-api, test-worker, test-api-start, test-pulumi]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install uv
      run: |
        pip install --upgrade pip
        pip install uv
    - name: Install Docker
      uses: docker/setup-buildx-action@v3
    - name: Build Lambda packages
      run: |
        chmod +x ./build_lambda_packages.sh
        ./build_lambda_packages.sh
    - name: Upload API package artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-package
        path: api/build/packages/api-package-*.zip
        retention-days: 7
    - name: Upload worker package artifact
      uses: actions/upload-artifact@v4
      with:
        name: worker-package
        path: worker/build/packages/worker-package-*.zip
        retention-days: 7