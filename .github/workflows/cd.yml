name: CD

on:
  push:
    branches:
      - main  # Deploy to dev on push to main
      - 'releases/demo'  # Deploy to demo (prod) on push to releases/demo
  workflow_dispatch:  # Allow manual triggering

# Define environment-specific variables
env:
  PULUMI_VERSION: '3.121.0'
  STACK_NAME: dev

# Concurrency group ensures that only one workflow runs at a time
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: false

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - id: set-env
        run: |
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == "refs/heads/releases/demo" ]]; then
            echo "environment=demo" >> $GITHUB_OUTPUT
          else
            echo "environment=unknown" >> $GITHUB_OUTPUT
            echo "No deployment will be triggered for this branch"
          fi

  deploy:
    needs: determine-environment
    # Only run if environment is known
    if: needs.determine-environment.outputs.environment != 'unknown'
    runs-on: ubuntu-latest
    # Use the determined environment
    environment: ${{ needs.determine-environment.outputs.environment }}
    permissions:
      id-token: write  # Required for OIDC auth with AWS
      contents: read   # Required to checkout the code
    
    steps:
      - uses: actions/checkout@v4
      
      # Debug AWS Account ID
      - name: Debug AWS Account ID
        run: |
          echo "Using AWS Account ID: ${{ secrets.AWS_ACCOUNT_ID }}"
      
      # Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.AWS_REGION }}
      
      # Download artifacts from CI workflow
      - name: Download API package
        uses: actions/download-artifact@v4
        with:
          name: api-package
          path: api/build/packages/
      
      - name: Download worker package
        uses: actions/download-artifact@v4
        with:
          name: worker-package
          path: worker/build/packages/
      
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      # Install uv and dependencies
      - name: Install uv
        run: |
          pip install --upgrade pip
          pip install uv
      
      - name: Install dependencies
        run: |
          cd provisioning
          uv sync
      
      - name: Deploy with Pulumi
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: yorrickjansen/${{ env.STACK_NAME }}
          args: '-y'
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

    
      # Verify deployment
      - name: Test deployed API endpoint
        if: ${{ success() }}
        run: |
          cd provisioning
          ENDPOINT=$(pulumi stack output apigateway-rest-endpoint)
          curl -f "${ENDPOINT}/examples/hello" || exit 1